typescript的面向对的实现

typescript面向对象的实现时通过模块（modle）实现的，这些模块就是把类区分起来，把抽象类和接口类与实现抽象类和实现接口区分开来，
这也是方便以后使用各种开发模式的方法

注意的是，typescript与其他objective语言不太一样，在需要暴露一些类时需要使用到export关键字。

import {} '/' 导入模块

举个例子

这里需要实现一个类，这个类是用来控制坐标的。我们可以这样实现，1.创建一个抽象基类 2.然后实现继承抽象类并实现里面的抽象方法

export class ab_controller{
      protected cid:number = 0;
      contructor(cid:number){
      this.cid = cid;
      }
      abstract getX():number;
      abstract getY():number;
} 

@sealed
export class controller extents{
       private x:number;
       private y:number;
       
       contructor(x:number,y:number){
          super(3);
          this.x = x;
          this.y = y;
       }
}
let con:controller;


接口
export interface inclass{ 
 属性
 方法

}

class impclass implements inclass{
    属性赋值
    方法实现
} 

